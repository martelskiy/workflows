name: "ECR Docker Reusable Workflow"

on:
  workflow_call:
    inputs:
      image-tag:
        required: false
        type: string
      ecr-repository:
        required: true
        type: string
      image-architectures:
        description: Comma separated list of architectures. Defaults to 'linux/amd64,linux/arm64'
        required: false
        type: string
        default: linux/amd64,linux/arm64
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

env:
  AWS_REGION: "eu-north-1"
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  docker-build-push:
    name: Build Push Docker Image
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
   
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials Development
      if: github.ref != 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::226165991761:role/github-actions
          role-session-name: GithubActionsSession

    - name: Configure AWS Credentials Production
      if: github.ref == 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v4
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::480162773870:role/github-actions
          role-session-name: GithubActionsSession

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set image tag
      if: inputs.image-tag == ''
      run: |
        echo $GITHUB_SHA
        echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
          platforms: ${{ inputs.image-architectures }}

    - name: Build and push
      uses: docker/build-push-action@v4
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
      with:
          context: .
          file: build/Dockerfile
          push: true
          platforms: ${{ inputs.image-architectures }}
          build-args: | 
              ECR_REGISTRY=${{ env.ECR_REGISTRY }} 
              GITHUB_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}