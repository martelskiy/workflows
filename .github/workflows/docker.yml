name: "ECR Docker Reusable Workflow"

on:
  workflow_call:
    inputs:
      image-tag:
        required: false
        type: string
      ecr-repository:
        required: true
        type: string
      cross-platform:
        required: false
        type: boolean
        default: false
      image-architecture:
        required: false
        type: string
        default: linux/arm64

env:
  AWS_REGION: "eu-north-1"
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  docker-build-push:
    name: Build Push Docker Image
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
   
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials Development
      if: github.ref != 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::226165991761:role/github-actions
          role-session-name: GithubActionsSession

    - name: Configure AWS Credentials Production
      if: github.ref == 'refs/heads/main'
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::480162773870:role/github-actions
          role-session-name: GithubActionsSession

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set image tag
      if: inputs.image-tag == ''
      run: |
        echo $GITHUB_SHA
        echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      if: inputs.cross-platform == false
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        IMAGE_ARCHITECTURE: ${{ inputs.image-architecture }}
        DOCKERFILE_DIR: build
      run: |
        docker build --build-arg "ECR_REGISTRY=$ECR_REGISTRY" --platform $IMAGE_ARCHITECTURE -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE_DIR/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    - name: Build, tag, and push image to Amazon ECR
      if: inputs.cross-platform
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repository }}
        DOCKERFILE_DIR: build
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --push -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE_DIR/Dockerfile .